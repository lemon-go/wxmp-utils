{"version":3,"file":"IRetryPolicy.js","sourceRoot":"","sources":["../../src/IRetryPolicy.ts"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,+GAA+G","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\n/** An abstraction that controls when the client attempts to reconnect and how many times it does so. */\nexport interface IRetryPolicy {\n    /** Called after the transport loses the connection.\n     *\n     * @param {RetryContext} retryContext Details related to the retry event to help determine how long to wait for the next retry.\n     *\n     * @returns {number | null} The amount of time in milliseconds to wait before the next retry. `null` tells the client to stop retrying.\n     */\n    nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null;\n}\n\nexport interface RetryContext {\n    /**\n     * The number of consecutive failed tries so far.\n     */\n    readonly previousRetryCount: number;\n\n    /**\n     * The amount of time in milliseconds spent retrying so far.\n     */\n    readonly elapsedMilliseconds: number;\n\n    /**\n     * The error that forced the upcoming retry.\n     */\n    readonly retryReason: Error;\n}\n"]}