{"version":3,"file":"UniWebSocket.js","sourceRoot":"","sources":["../../src/UniWebSocket.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebSocketConstructor } from \"./Polyfills\";\r\n\r\ntype UniSocketTask = UniApp.SocketTask & { readyState: number };\r\n\r\n/**\r\n * 兼容 Uni app 平台的 WebSocket 连接实现。\r\n * @author Fred Yuan\r\n * @see uni-doc https://uniapp.dcloud.io/api/request/websocket\r\n *              https://github.com/dcloudio/uni-app/blob/master/src/core/service/api/network/socket.js\r\n */\r\nexport const UniWebSocket: WebSocketConstructor =  class UniSocket implements WebSocket {\r\n    public get url() { return this._url; }\r\n    public binaryType: BinaryType = \"blob\";\r\n    public get bufferedAmount() { return 0; }\r\n    public get extensions() { return \"\"; }\r\n    public get protocol() { return \"\"; }\r\n    public get readyState() {\r\n        return this._socket.readyState;\r\n    }\r\n    public get CLOSED() { return 3; }\r\n    public get CLOSING() { return 2; }\r\n    public get OPEN() { return 1; }\r\n    public get CONNECTING() { return 0; }\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    private _url: string;\r\n    // tslint:disable-next-line:variable-name\r\n    private _socket: UniSocketTask;\r\n\r\n    constructor(url: string, protocols?: string | string[], options?: any) {\r\n        this._url = url;\r\n        // tslint:disable-next-line:variable-name\r\n        let _protocols: string[] | undefined;\r\n        if (typeof protocols === \"string\") {\r\n            _protocols = [protocols];\r\n        } else if (Array.isArray(protocols)) {\r\n            _protocols = protocols;\r\n        }\r\n\r\n        const header = { \"Content-Type\": \"application/json\" };\r\n        const connectOption: UniApp.ConnectSocketOption = {\r\n            url,\r\n            header,\r\n            method: \"GET\",\r\n            protocols: _protocols,\r\n            success(res) {\r\n                console.log(\"[UniWebSocket] uni.connectSocket invoke success.\", res);\r\n            },\r\n            fail(err) {\r\n                console.error(\"[UniWebSocket] uni.connectSocket invoke faild.\", err);\r\n            },\r\n        };\r\n        if (typeof options === \"object\") {\r\n            if (typeof options.header === \"object\") {\r\n                connectOption.header = { ...header, ...options.header };\r\n            } else if (typeof options.headers === \"object\") {\r\n                connectOption.header = { ...header, ...options.headers };\r\n            }\r\n            if (typeof options.method === \"string\") {\r\n                connectOption.method = options.method.toUpperCase();\r\n            }\r\n            if (typeof options.protocols === \"string\") {\r\n                if (!connectOption.protocols) {\r\n                    connectOption.protocols = [options.protocols];\r\n                } else {\r\n                    connectOption.protocols.push(options.protocols);\r\n                }\r\n            } else if (Array.isArray(options.protocols)) {\r\n                if (!connectOption.protocols) {\r\n                    connectOption.protocols = options.protocols;\r\n                } else {\r\n                    connectOption.protocols.push(...options.protocols);\r\n                }\r\n            }\r\n        }\r\n\r\n        const socket = uni.connectSocket(connectOption) as UniSocketTask;\r\n        this._socket = socket;\r\n        socket.onOpen(() => {\r\n            if (this.onopen) {\r\n                const ev: Event = { type: \"open\" } as Event;\r\n                this.onopen(ev);\r\n                // this.onopen(new Event(\"open\"));\r\n            }\r\n        });\r\n        socket.onClose((reason) => {\r\n            if (this.onclose) {\r\n                if (typeof reason === \"object\") {\r\n                    reason.type = \"close\";\r\n                }\r\n                this.onclose(reason);\r\n                // this.onclose(new CloseEvent(\"close\", {\r\n                //     /** Warn: incorrect */\r\n                //     wasClean: true,\r\n                //     code: 1000,\r\n                // }));\r\n            }\r\n        });\r\n        socket.onError(() => {\r\n            if (this.onerror) {\r\n                const ev = { type: \"error\" } as Event;\r\n                this.onerror(ev);\r\n                // this.onerror(new Event(\"error\"));\r\n            }\r\n        });\r\n        socket.onMessage((result) => {\r\n            if (this.onmessage) {\r\n                const ev = { type: \"message\", data: result.data } as MessageEvent;\r\n                this.onmessage(ev);\r\n            }\r\n        });\r\n    }\r\n\r\n    public onclose: ((this: WebSocket, ev: CloseEvent) => any) | null = null;\r\n    public onerror: ((this: WebSocket, ev: Event) => any) | null = null;\r\n    public onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null = null;\r\n    public onopen: ((this: WebSocket, ev: Event) => any) | null = null;\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    public addEventListener<K extends keyof WebSocketEventMap>(_type: K, _listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, _options?: boolean | AddEventListenerOptions): void {\r\n        /** empty-implements */\r\n        throw new Error(\"UniWebSocket do not implement 'addEventListener' method.\");\r\n    }\r\n    // public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\r\n    // tslint:disable-next-line:variable-name\r\n    public removeEventListener<K extends keyof WebSocketEventMap>(_type: K, _listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, _options?: boolean | EventListenerOptions): void {\r\n        /** empty-implements */\r\n        throw new Error(\"UniWebSocket do not implement 'removeEventListener' method.\");\r\n    }\r\n    // public removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\r\n    // tslint:disable-next-line:variable-name\r\n    public dispatchEvent(_event: Event): boolean {\r\n        /** empty-implements */\r\n        throw new Error(\"UniWebSocket do not implement 'dispatchEvent' method.\");\r\n        // return false;\r\n    }\r\n\r\n    public close(code?: number, reason?: string): void {\r\n        this._socket.close({ code, reason });\r\n    }\r\n\r\n    public send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void {\r\n        data = data as (string | ArrayBuffer);\r\n        this._socket.send({ data });\r\n    }\r\n\r\n    public static CLOSED = 3;\r\n    public static CLOSING = 2;\r\n    public static OPEN = 1;\r\n    public static CONNECTING = 0;\r\n};\r\n"]}