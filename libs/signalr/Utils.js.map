{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../../src/Utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nimport { HttpClient } from \"./HttpClient\";\nimport { MessageHeaders } from \"./IHubProtocol\";\nimport { ILogger, LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\";\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\nimport { Subject } from \"./Subject\";\n\n// Version token that will be replaced by the prepack command\n/** The version of the SignalR client. */\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\n\n/** @private */\nexport class Arg {\n    public static isRequired(val: any, name: string): void {\n        if (val === null || val === undefined) {\n            throw new Error(`The '${name}' argument is required.`);\n        }\n    }\n    public static isNotEmpty(val: string, name: string): void {\n        if (!val || val.match(/^\\s*$/)) {\n            throw new Error(`The '${name}' argument should not be empty.`);\n        }\n    }\n\n    public static isIn(val: any, values: any, name: string): void {\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n        if (!(val in values)) {\n            throw new Error(`Unknown ${name} value: ${val}.`);\n        }\n    }\n}\n\n/** @private */\nexport class Platform {\n    public static get isBrowser(): boolean {\n        return typeof window === \"object\";\n    }\n\n    public static get isWebWorker(): boolean {\n        return typeof self === \"object\" && \"importScripts\" in self;\n    }\n\n    public static get isUni(): boolean {\n        return typeof uni === \"object\";\n    }\n\n    public static get isWechatMP(): boolean {\n        return typeof wx === \"object\" && typeof uni === \"undefined\";\n    }\n\n    public static get isNode(): boolean {\n        return !this.isBrowser && !this.isWebWorker && !this.isUni && !this.isWechatMP;\n    }\n}\n\n/** @private */\nexport function getDataDetail(data: any, includeContent: boolean): string {\n    let detail = \"\";\n    if (isArrayBuffer(data)) {\n        detail = `Binary data of length ${data.byteLength}`;\n        if (includeContent) {\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\n        }\n    } else if (typeof data === \"string\") {\n        detail = `String data of length ${data.length}`;\n        if (includeContent) {\n            detail += `. Content: '${data}'`;\n        }\n    }\n    return detail;\n}\n\n/** @private */\nexport function formatArrayBuffer(data: ArrayBuffer): string {\n    const view = new Uint8Array(data);\n\n    // Uint8Array.map only supports returning another Uint8Array?\n    let str = \"\";\n    view.forEach((num) => {\n        const pad = num < 16 ? \"0\" : \"\";\n        str += `0x${pad}${num.toString(16)} `;\n    });\n\n    // Trim of trailing space.\n    return str.substr(0, str.length - 1);\n}\n\n// Also in signalr-protocol-msgpack/Utils.ts\n/** @private */\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\n    return val && typeof ArrayBuffer !== \"undefined\" &&\n        (val instanceof ArrayBuffer ||\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\n}\n\n/** @private */\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined,\n                                  content: string | ArrayBuffer, logMessageContent: boolean, withCredentials: boolean, defaultHeaders: MessageHeaders): Promise<void> {\n    let headers = {};\n    if (accessTokenFactory) {\n        const token = await accessTokenFactory();\n        if (token) {\n            headers = {\n                [\"Authorization\"]: `Bearer ${token}`,\n            };\n        }\n    }\n\n    const [name, value] = getUserAgentHeader();\n    headers[name] = value;\n\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\n\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n    const response = await httpClient.post(url, {\n        content,\n        headers: { ...headers, ...defaultHeaders},\n        responseType,\n        withCredentials,\n    });\n\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\n}\n\n/** @private */\nexport function createLogger(logger?: ILogger | LogLevel) {\n    if (logger === undefined) {\n        return new ConsoleLogger(LogLevel.Information);\n    }\n\n    if (logger === null) {\n        return NullLogger.instance;\n    }\n\n    if ((logger as ILogger).log) {\n        return logger as ILogger;\n    }\n\n    return new ConsoleLogger(logger as LogLevel);\n}\n\n/** @private */\nexport class SubjectSubscription<T> implements ISubscription<T> {\n    private subject: Subject<T>;\n    private observer: IStreamSubscriber<T>;\n\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\n        this.subject = subject;\n        this.observer = observer;\n    }\n\n    public dispose(): void {\n        const index: number = this.subject.observers.indexOf(this.observer);\n        if (index > -1) {\n            this.subject.observers.splice(index, 1);\n        }\n\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\n            this.subject.cancelCallback().catch((_) => { });\n        }\n    }\n}\n\n/** @private */\nexport class ConsoleLogger implements ILogger {\n    private readonly minimumLogLevel: LogLevel;\n\n    // Public for testing purposes.\n    public outputConsole: {\n        error(message: any): void,\n        warn(message: any): void,\n        info(message: any): void,\n        log(message: any): void,\n    };\n\n    constructor(minimumLogLevel: LogLevel) {\n        this.minimumLogLevel = minimumLogLevel;\n        this.outputConsole = console;\n    }\n\n    public log(logLevel: LogLevel, message: string): void {\n        if (logLevel >= this.minimumLogLevel) {\n            switch (logLevel) {\n                case LogLevel.Critical:\n                case LogLevel.Error:\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n                    break;\n                case LogLevel.Warning:\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n                    break;\n                case LogLevel.Information:\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n                    break;\n                default:\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n                    break;\n            }\n        }\n    }\n}\n\n/** @private */\nexport function getUserAgentHeader(): [string, string] {\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\n    if (Platform.isNode) {\n        userAgentHeaderName = \"User-Agent\";\n    }\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\n}\n\n/** @private */\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\n    let userAgent: string = \"Microsoft SignalR/\";\n\n    const majorAndMinor = version.split(\".\");\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\n    userAgent += ` (${version}; `;\n\n    if (os && os !== \"\") {\n        userAgent += `${os}; `;\n    } else {\n        userAgent += \"Unknown OS; \";\n    }\n\n    userAgent += `${runtime}`;\n\n    if (runtimeVersion) {\n        userAgent += `; ${runtimeVersion}`;\n    } else {\n        userAgent += \"; Unknown Runtime Version\";\n    }\n\n    userAgent += \")\";\n    return userAgent;\n}\n\nfunction getOsName(): string {\n    if (Platform.isNode) {\n        switch (process.platform) {\n            case \"win32\":\n                return \"Windows NT\";\n            case \"darwin\":\n                return \"macOS\";\n            case \"linux\":\n                return \"Linux\";\n            default:\n                return process.platform;\n        }\n    } else {\n        return \"\";\n    }\n}\n\nfunction getRuntimeVersion(): string | undefined {\n    if (Platform.isNode) {\n        return process.versions.node;\n    }\n    return undefined;\n}\n\nfunction getRuntime(): string {\n    if (Platform.isNode) {\n        return \"NodeJS\";\n    } else {\n        return \"Browser\";\n    }\n}\n"]}