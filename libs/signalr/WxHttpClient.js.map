{"version":3,"file":"WxHttpClient.js","sourceRoot":"","sources":["../../src/WxHttpClient.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\ntype RequestMethod = \"OPTIONS\" | \"GET\" | \"HEAD\" | \"POST\" | \"PUT\" | \"DELETE\" | \"TRACE\" | \"CONNECT\";\r\n\r\nexport class WxHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n\r\n    constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n    }\r\n\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        const self = this;\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const conf: WechatMiniprogram.RequestOption = {\r\n                url: request.url!,\r\n                data: request.content,\r\n                method: (request.method || \"GET\").toUpperCase() as RequestMethod,\r\n                header: {\r\n                    // Tell auth middleware to 401 instead of redirecting\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    ...(request.headers || {}),\r\n                },\r\n                responseType: (request.responseType === \"arraybuffer\" || request.responseType === \"blob\") ? \"arraybuffer\" : \"text\",\r\n                dataType: \"其他\",\r\n                timeout: request.timeout,\r\n            };\r\n\r\n            conf.success = ({ data, statusCode }) => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (statusCode >= 200 && statusCode < 300) {\r\n                    const dataType = typeof data;\r\n                    let dataString = \"\";\r\n                    if (data instanceof ArrayBuffer) {\r\n                        dataString = utf8ArrayToString(new Int32Array(data));\r\n                    } else if (dataType !== \"string\" && dataType !== \"undefined\") {\r\n                        dataString = JSON.stringify(data);\r\n                    } else if (data) {\r\n                        dataString = data + \"\";\r\n                    }\r\n                    resolve(new HttpResponse(statusCode, \"OK\", dataString));\r\n                } else {\r\n                    const errorMessage = `[WxHttpClient] Request success, but status code is ${ statusCode }`;\r\n                    self.logger.log(LogLevel.Error, errorMessage);\r\n                    reject(new HttpError(errorMessage, statusCode));\r\n                }\r\n            };\r\n            conf.fail = ({ errMsg }) => {\r\n                self.logger.log(LogLevel.Error, `[WxHttpClient] Request failed, message: ${ errMsg }.`);\r\n                let err: Error;\r\n                if ((errMsg + \"\").toUpperCase().indexOf(\"TIMEOUT\") !== -1) {\r\n                    err = new TimeoutError(errMsg);\r\n                } else {\r\n                    err = new HttpError(errMsg, -1);\r\n                }\r\n                reject(err);\r\n            };\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    if (reqTask) {\r\n                        reqTask.abort();\r\n                    }\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            const reqTask = wx.request(conf);\r\n        });\r\n    }\r\n}\r\n\r\nfunction utf8ArrayToString(array: ArrayLike<number>): string {\r\n    let out = \"\";\r\n    let i = 0;\r\n    const len = array.length;\r\n    let c: number;\r\n\r\n    let char2: number;\r\n    let char3: number;\r\n\r\n    while (i < len) {\r\n        c = array[i++];\r\n        switch (c >> 4) {\r\n            case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\r\n                // 0xxxxxxx\r\n                out += String.fromCharCode(c);\r\n                break;\r\n            case 12: case 13:\r\n                // 110x xxxx   10xx xxxx\r\n                char2 = array[i++];\r\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\r\n                break;\r\n            case 14:\r\n                // 1110 xxxx  10xx xxxx  10xx xxxx\r\n                char2 = array[i++];\r\n                char3 = array[i++];\r\n                out += String.fromCharCode(((c & 0x0F) << 12) | ((char2 & 0x3F) << 6) | ((char3 & 0x3F) << 0));\r\n                break;\r\n        }\r\n    }\r\n    return out;\r\n}\r\n"]}