{"version":3,"file":"DefaultHttpClient.js","sourceRoot":"","sources":["../../src/DefaultHttpClient.ts"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,+GAA+G;;;;;;;;;;;AAE/G,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACtC,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,UAAU,EAA6B,MAAM,cAAc,CAAC;AAErE,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,uEAAuE;AACvE;IAAuC,qCAAU;IAG7C,yJAAyJ;IACzJ,2BAAmB,MAAe;QAAlC,YACI,iBAAO,SAaV;QAXG,IAAI,QAAQ,CAAC,KAAK,EAAE;YAChB,KAAI,CAAC,UAAU,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;SAC/C;aAAM,IAAI,QAAQ,CAAC,UAAU,EAAE;YAC5B,KAAI,CAAC,UAAU,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;SAC9C;aAAM,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,QAAQ,CAAC,MAAM,EAAE;YACxD,KAAI,CAAC,UAAU,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC;SACjD;aAAM,IAAI,OAAO,cAAc,KAAK,WAAW,EAAE;YAC9C,KAAI,CAAC,UAAU,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;SAC/C;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAClD;;IACL,CAAC;IAED,kBAAkB;IACX,gCAAI,GAAX,UAAY,OAAoB;QAC5B,wDAAwD;QACxD,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE;YACpD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;SAC3C;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACjB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YACd,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;SACvD;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAEM,2CAAe,GAAtB,UAAuB,GAAW;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;IACL,wBAAC;AAAD,CAAC,AAxCD,CAAuC,UAAU,GAwChD","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nimport { AbortError } from \"./Errors\";\nimport { FetchHttpClient } from \"./FetchHttpClient\";\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\nimport { ILogger } from \"./ILogger\";\nimport { UniHttpClient } from \"./UniHttpClient\";\nimport { Platform } from \"./Utils\";\nimport { WxHttpClient } from \"./WxHttpClient\";\nimport { XhrHttpClient } from \"./XhrHttpClient\";\n\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\nexport class DefaultHttpClient extends HttpClient {\n    private readonly httpClient: HttpClient;\n\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\n    public constructor(logger: ILogger) {\n        super();\n\n        if (Platform.isUni) {\n            this.httpClient = new UniHttpClient(logger);\n        } else if (Platform.isWechatMP) {\n            this.httpClient = new WxHttpClient(logger);\n        } else if (typeof fetch !== \"undefined\" || Platform.isNode) {\n            this.httpClient = new FetchHttpClient(logger);\n        } else if (typeof XMLHttpRequest !== \"undefined\") {\n            this.httpClient = new XhrHttpClient(logger);\n        } else {\n            throw new Error(\"No usable HttpClient found.\");\n        }\n    }\n\n    /** @inheritDoc */\n    public send(request: HttpRequest): Promise<HttpResponse> {\n        // Check that abort was not signaled before calling send\n        if (request.abortSignal && request.abortSignal.aborted) {\n            return Promise.reject(new AbortError());\n        }\n\n        if (!request.method) {\n            return Promise.reject(new Error(\"No method defined.\"));\n        }\n        if (!request.url) {\n            return Promise.reject(new Error(\"No url defined.\"));\n        }\n\n        return this.httpClient.send(request);\n    }\n\n    public getCookieString(url: string): string {\n        return this.httpClient.getCookieString(url);\n    }\n}\n"]}