{"version":3,"file":"Errors.js","sourceRoot":"","sources":["../../src/Errors.ts"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,+GAA+G;;;;;;;;;;;AAE/G,+CAA+C;AAC/C;IAA+B,6BAAK;IAQhC;;;;OAIG;IACH,mBAAY,YAAoB,EAAE,UAAkB;;QAApD,iBAQC;QAPG,IAAM,SAAS,GAAG,WAAW,SAAS,CAAC;QACvC,QAAA,kBAAM,YAAY,CAAC,SAAC;QACpB,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,0CAA0C;QAC1C,8EAA8E;QAC9E,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;IAC/B,CAAC;IACL,gBAAC;AAAD,CAAC,AAtBD,CAA+B,KAAK,GAsBnC;;AAED,2CAA2C;AAC3C;IAAkC,gCAAK;IAKnC;;;OAGG;IACH,sBAAY,YAA4C;;QAA5C,6BAAA,EAAA,oCAA4C;QAAxD,iBAOC;QANG,IAAM,SAAS,GAAG,WAAW,SAAS,CAAC;QACvC,QAAA,kBAAM,YAAY,CAAC,SAAC;QAEpB,0CAA0C;QAC1C,8EAA8E;QAC9E,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;IAC/B,CAAC;IACL,mBAAC;AAAD,CAAC,AAjBD,CAAkC,KAAK,GAiBtC;;AAED,8CAA8C;AAC9C;IAAgC,8BAAK;IAKjC;;;OAGG;IACH,oBAAY,YAA2C;;QAA3C,6BAAA,EAAA,mCAA2C;QAAvD,iBAOC;QANG,IAAM,SAAS,GAAG,WAAW,SAAS,CAAC;QACvC,QAAA,kBAAM,YAAY,CAAC,SAAC;QAEpB,0CAA0C;QAC1C,8EAA8E;QAC9E,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;IAC/B,CAAC;IACL,iBAAC;AAAD,CAAC,AAjBD,CAAgC,KAAK,GAiBpC","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\n/** Error thrown when an HTTP request fails. */\nexport class HttpError extends Error {\n    // @ts-ignore: Intentionally unused.\n    // tslint:disable-next-line:variable-name\n    private __proto__: Error;\n\n    /** The HTTP status code represented by this error. */\n    public statusCode: number;\n\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     * @param {number} statusCode The HTTP status code represented by this error.\n     */\n    constructor(errorMessage: string, statusCode: number) {\n        const trueProto = new.target.prototype;\n        super(errorMessage);\n        this.statusCode = statusCode;\n\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n\n/** Error thrown when a timeout elapses. */\nexport class TimeoutError extends Error {\n    // @ts-ignore: Intentionally unused.\n    // tslint:disable-next-line:variable-name\n    private __proto__: Error;\n\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     */\n    constructor(errorMessage: string = \"A timeout occurred.\") {\n        const trueProto = new.target.prototype;\n        super(errorMessage);\n\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n\n/** Error thrown when an action is aborted. */\nexport class AbortError extends Error {\n    // @ts-ignore: Intentionally unused.\n    // tslint:disable-next-line:variable-name\n    private __proto__: Error;\n\n    /** Constructs a new instance of {@link AbortError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     */\n    constructor(errorMessage: string = \"An abort occurred.\") {\n        const trueProto = new.target.prototype;\n        super(errorMessage);\n\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        this.__proto__ = trueProto;\n    }\n}\n"]}